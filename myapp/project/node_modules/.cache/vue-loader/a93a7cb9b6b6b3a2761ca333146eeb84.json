{"remainingRequest":"E:\\自主研发的\\myapp\\project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\自主研发的\\myapp\\project\\src\\components\\swiper\\Swipe.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\自主研发的\\myapp\\project\\src\\components\\swiper\\Swipe.vue","mtime":1606661753544},{"path":"E:\\自主研发的\\myapp\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自主研发的\\myapp\\project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\自主研发的\\myapp\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自主研发的\\myapp\\project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Swipe.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"Swipe.vue","sourceRoot":"src/components/swiper","sourcesContent":["\r\n<template>\r\n    <div id=\"hy-swipe\">\r\n        <div id=\"swipe\" @touchstart=\"touchStart\" @touchmove=\"touchMove\" @touchend=\"touchEnd\">\r\n            <slot></slot>\r\n        </div>\r\n        <slot name=\"indicator\"></slot>\r\n        <div class=\"indicator\">\r\n            <slot name=\"indicator\" v-if=\"showIndicator && slideCount>=1\">\r\n                <div v-for=\"(item, index) in slideCount\" class=\"indicator-item\" :class=\"{active: index === currentIndex-1}\"\r\n                     :key=\"index\"></div>\r\n            </slot>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Swiper\",\r\n        props: {\r\n            //默认3秒换一张图片\r\n            interval: {\r\n                type: Number,\r\n                default: 3000\r\n            },\r\n            //延迟多久开始轮播\r\n            animDuration: {\r\n                type: Number,\r\n                default: 200\r\n            },\r\n            //默认用户滑动到4/1图片就跳过去\r\n            moveRatio: {\r\n                type: Number,\r\n                default: 0.25\r\n            },\r\n            //是否显示下方标记\r\n            showIndicator: {\r\n                type: Boolean,\r\n                default: true\r\n            }\r\n        },\r\n        data: function () {\r\n            return {\r\n                slideCount: 0, // 元素个数\r\n                totalWidth: 0, // swiper的宽度\r\n                swiperStyle: {}, // swiper样式\r\n                currentIndex: 1, // 当前的index\r\n                scrolling: false, // 是否正在滚动\r\n            }\r\n        },\r\n        mounted: function () {\r\n            this.$nextTick(() => {\r\n                // 1.操作DOM, 在前后添加Slide\r\n                setTimeout(() => {\r\n                    this.handleDom();//将图片动态加入到dom中\r\n                    // 2.开启定时器\r\n                    this.startTimer();\r\n                }, 500)\r\n            })\r\n        },\r\n        methods: {\r\n            /**\r\n             * 定时器操作\r\n             */\r\n            startTimer: function () {\r\n                this.playTimer = window.setInterval(() => {\r\n                    this.currentIndex++;\r\n                    this.scrollContent(-this.currentIndex * this.totalWidth);\r\n                }, this.interval)\r\n            },\r\n            stopTimer: function () {\r\n                window.clearInterval(this.playTimer);\r\n            },\r\n            /**\r\n             * 滚动到正确的位置\r\n             */\r\n            scrollContent: function (currentPosition) {\r\n                // 0.设置正在滚动\r\n                this.scrolling = true;\r\n                // 1.开始滚动动画\r\n                this.swiperStyle.transition = 'transform ' + this.animDuration + 'ms';\r\n                this.setTransform(currentPosition);\r\n                // 2.判断滚动到的位置\r\n                this.checkPosition();\r\n                // 4.滚动完成\r\n                this.scrolling = false\r\n            },\r\n            /**\r\n             * 校验正确的位置\r\n             */\r\n            checkPosition: function () {\r\n                window.setTimeout(() => {\r\n                    // 1.校验正确的位置\r\n                    this.swiperStyle.transition = '0ms';\r\n                    if (this.currentIndex >= this.slideCount + 1) {\r\n                        this.currentIndex = 1;\r\n                        this.setTransform(-this.currentIndex * this.totalWidth);\r\n                    } else if (this.currentIndex <= 0) {\r\n                        this.currentIndex = this.slideCount;\r\n                        this.setTransform(-this.currentIndex * this.totalWidth);\r\n                    }\r\n                    // 2.结束移动后的回调\r\n                    this.$emit('transitionEnd', this.currentIndex - 1);\r\n                }, this.animDuration)\r\n            },\r\n            /**\r\n             * 设置滚动的位置\r\n             */\r\n            setTransform: function (position) {\r\n                this.swiperStyle.transform = `translate3d(${position}px, 0, 0)`;\r\n                this.swiperStyle['-webkit-transform'] = `translate3d(${position}px), 0, 0`;\r\n                this.swiperStyle['-ms-transform'] = `translate3d(${position}px), 0, 0`;\r\n            },\r\n            /**\r\n             * 操作DOM, 在DOM前后添加Slide\r\n             */\r\n            handleDom: function () {\r\n                this.$nextTick(() => {\r\n                    // 1.获取要操作的元素\r\n                    let swiperEl = document.querySelector('#swiper');\r\n                    let slidesEls = swiperEl.getElementsByClassName('slide');//得到图片\r\n                    // 2.保存个数\r\n                    this.slideCount = slidesEls.length;\r\n                    // 3.如果图片的个数大于1个, 那么在前后分别添加一个slide\r\n                    if (this.slideCount > 1) {\r\n                        let cloneFirst = slidesEls[0].cloneNode(true);//克隆第一张图片\r\n                        let cloneLast = slidesEls[this.slideCount - 1].cloneNode(true);//克隆最后一张图片\r\n                        swiperEl.insertBefore(cloneLast, slidesEls[0]);//将克隆的最后一张图片插入到第一张图片之前\r\n                        swiperEl.appendChild(cloneFirst);//将克隆的第一张图片插入到最后面\r\n                        this.totalWidth = swiperEl.offsetWidth;//获取盒子的大小\r\n                        this.swiperStyle = swiperEl.style;//获取样式\r\n                    }\r\n                    // 4.让swiper元素, 显示第一个(目前是显示前面添加的最后一个元素)\r\n                    this.setTransform(-this.totalWidth);//向左边移动一个盒子(图片)的大小，显示上面插入的最后那个图片\r\n                })\r\n            },\r\n            /**\r\n             * 拖动事件的处理\r\n             */\r\n            touchStart: function (e) {\r\n                // 1.如果正在滚动, 不可以拖动\r\n                if (this.scrolling) return;\r\n                // 2.停止定时器\r\n                this.stopTimer();\r\n                // 3.保存开始滚动的位置\r\n                this.startX = e.touches[0].pageX;\r\n            },\r\n            touchMove: function (e) {\r\n                // 1.计算出用户拖动的距离\r\n                this.currentX = e.touches[0].pageX;\r\n                this.distance = this.currentX - this.startX;\r\n                let currentPosition = -this.currentIndex * this.totalWidth;\r\n                let moveDistance = this.distance + currentPosition;\r\n                // 2.设置当前的位置\r\n                this.setTransform(moveDistance);\r\n            },\r\n            touchEnd: function (e) {\r\n                // 1.获取移动的距离\r\n                let currentMove = Math.abs(this.distance);\r\n                // 2.判断最终的距离\r\n                if (this.distance === 0) {\r\n                    return\r\n                } else if (this.distance > 0 && currentMove > this.totalWidth * this.moveRatio) { // 右边移动超过0.5\r\n                    this.currentIndex--\r\n                } else if (this.distance < 0 && currentMove > this.totalWidth * this.moveRatio) { // 向左移动超过0.5\r\n                    this.currentIndex++\r\n                }\r\n                // 3.移动到正确的位置\r\n                this.scrollContent(-this.currentIndex * this.totalWidth);\r\n                // 4.移动完成后重新开启定时器\r\n                this.startTimer();\r\n            },\r\n            /**\r\n             * 控制上一个, 下一个\r\n             */\r\n            previous: function () {\r\n                this.changeItem(-1);\r\n            },\r\n            next: function () {\r\n                this.changeItem(1);\r\n            },\r\n            changeItem: function (num) {\r\n                // 1.移除定时器\r\n                this.stopTimer();\r\n                // 2.修改index和位置\r\n                this.currentIndex += num;\r\n                this.scrollContent(-this.currentIndex * this.totalWidth);\r\n                // 3.添加定时器\r\n                this.startTimer();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    #hy-swipe {\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n    #swipe {\r\n        display: flex;\r\n    }\r\n    .indicator {\r\n        display: flex;\r\n        justify-content: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        bottom: 8px;\r\n    }\r\n    .indicator-item {\r\n        box-sizing: border-box;\r\n        width: 8px;\r\n        height: 8px;\r\n        border-radius: 4px;\r\n        background-color: #fff;\r\n        line-height: 8px;\r\n        text-align: center;\r\n        font-size: 12px;\r\n        margin: 0 5px;\r\n    }\r\n    .active {\r\n        background-color: rgba(212, 62, 46, 1.0);\r\n    }\r\n</style>\r\n"]}]}
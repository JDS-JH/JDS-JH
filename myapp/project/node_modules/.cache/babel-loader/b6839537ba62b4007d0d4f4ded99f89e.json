{"remainingRequest":"E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\node_modules\\thread-loader\\dist\\cjs.js!E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\node_modules\\babel-loader\\lib\\index.js!E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\src\\network\\request.js","dependencies":[{"path":"E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\src\\network\\request.js","mtime":1621238092466},{"path":"E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\自己的前端代码\\自主研发的vueapp\\myapp\\project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7CiAgdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICAgIGJhc2VVUjogIi9hcGkiLAogICAgdGltZW91dDogNTAwMAogIH0pOyAvLyBpbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoY29uZmlnPT57CiAgLy8gICAgIHJldHVybiBjb25maWcKICAvLyB9LGVycj0+e30KICAvLyApCiAgLy8gaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShyZXM9PnsKICAvLyAgICAgcmV0dXJuIHJlcy5kYXRhLy/mi6bmiKrlmajlv4Xpobvov5Tlm57vvIzkuI3nhLbmi7/kuI3liLDlgLwKICAvLyB9LGVycj0+ewogIC8vICAgICBjb25zb2xlLmxvZyhlcnIpCiAgLy8gfSkKCiAgcmV0dXJuIGluc3RhbmNlKGNvbmZpZyk7Cn0="},{"version":3,"sources":["E:/自己的前端代码/自主研发的vueapp/myapp/project/src/network/request.js"],"names":["axios","request","config","instance","create","baseUR","timeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAwB;AAEvB,MAAMC,QAAQ,GAACH,KAAK,CAACI,MAAN,CAAa;AACxBC,IAAAA,MAAM,EAAC,MADiB;AAExBC,IAAAA,OAAO,EAAC;AAFgB,GAAb,CAAf,CAFuB,CAOvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOH,QAAQ,CAACD,MAAD,CAAf;AACP","sourcesContent":["import axios from \"axios\"\r\nexport function request(config){\r\n    \r\n        const instance=axios.create({\r\n            baseUR:\"/api\",\r\n            timeout:5000\r\n        })\r\n\r\n        // instance.interceptors.request.use(config=>{\r\n        //     return config\r\n        // },err=>{}\r\n        // )\r\n        // instance.interceptors.response.use(res=>{\r\n        //     return res.data//拦截器必须返回，不然拿不到值\r\n        // },err=>{\r\n        //     console.log(err)\r\n        // })\r\n\r\n        return instance(config)\r\n}"]}]}